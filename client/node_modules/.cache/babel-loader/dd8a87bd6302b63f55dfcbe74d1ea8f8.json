{"ast":null,"code":"var _jsxFileName = \"/home/vito/films/client/src/pages/import.js\";\nimport React from 'react';\nimport { Button } from 'antd';\n\nclass FileInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fileInput = React.createRef();\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let reader = new FileReader();\n    reader.readAsText(this.fileInput.current.files[0]);\n\n    reader.onload = e => {\n      let result = e.target.result;\n      result = result.split('\\n').filter(el => el !== '');\n      let data = [];\n\n      for (let i = 0; i < result.length; i += 4) {\n        let name = result[i].slice(7);\n        let release = result[i + 1].slice(14);\n        let format = result[i + 2].slice(8);\n        let actors = result[i + 3].slice(7).split(',').map(el => el.trim()).map(el => {\n          let elements = el.split(' ');\n          return {\n            f_name: elements[0],\n            l_name: elements[1]\n          };\n        });\n        data.push({\n          name,\n          release,\n          format,\n          actors\n        });\n      }\n\n      console.log(data);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"import-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Select File PLS!\", React.createElement(\"input\", {\n      type: \"file\",\n      ref: this.fileInput,\n      name: \"file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nexport default FileInput;","map":{"version":3,"sources":["/home/vito/films/client/src/pages/import.js"],"names":["React","Button","FileInput","Component","constructor","props","handleSubmit","bind","fileInput","createRef","event","preventDefault","reader","FileReader","readAsText","current","files","onload","e","result","target","split","filter","el","data","i","length","name","slice","release","format","actors","map","trim","elements","f_name","l_name","push","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,MAAvB;;AAEA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,SAAL,GAAiBR,KAAK,CAACS,SAAN,EAAjB;AACH;;AACDH,EAAAA,YAAY,CAACI,KAAD,EAAQ;AAChBA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,IAAAA,MAAM,CAACE,UAAP,CAAkB,KAAKN,SAAL,CAAeO,OAAf,CAAuBC,KAAvB,CAA6B,CAA7B,CAAlB;;AACAJ,IAAAA,MAAM,CAACK,MAAP,GAAiBC,CAAD,IAAO;AACnB,UAAIC,MAAM,GAAGD,CAAC,CAACE,MAAF,CAASD,MAAtB;AACAA,MAAAA,MAAM,GAAGA,MAAM,CAACE,KAAP,CAAa,IAAb,EAAmBC,MAAnB,CAA0BC,EAAE,IAAIA,EAAE,KAAK,EAAvC,CAAT;AACA,UAAIC,IAAI,GAAG,EAAX;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,MAAM,CAACO,MAA3B,EAAmCD,CAAC,IAAI,CAAxC,EAA2C;AACvC,YAAIE,IAAI,GAAGR,MAAM,CAACM,CAAD,CAAN,CAAUG,KAAV,CAAgB,CAAhB,CAAX;AACA,YAAIC,OAAO,GAAGV,MAAM,CAACM,CAAC,GAAG,CAAL,CAAN,CAAcG,KAAd,CAAoB,EAApB,CAAd;AACA,YAAIE,MAAM,GAAGX,MAAM,CAACM,CAAC,GAAG,CAAL,CAAN,CAAcG,KAAd,CAAoB,CAApB,CAAb;AACA,YAAIG,MAAM,GAAGZ,MAAM,CAACM,CAAC,GAAG,CAAL,CAAN,CAAcG,KAAd,CAAoB,CAApB,EAAuBP,KAAvB,CAA6B,GAA7B,EAAkCW,GAAlC,CAAsCT,EAAE,IAAIA,EAAE,CAACU,IAAH,EAA5C,EAAuDD,GAAvD,CAA2DT,EAAE,IAAI;AAC1E,cAAIW,QAAQ,GAAGX,EAAE,CAACF,KAAH,CAAS,GAAT,CAAf;AACA,iBAAO;AACHc,YAAAA,MAAM,EAAED,QAAQ,CAAC,CAAD,CADb;AAEHE,YAAAA,MAAM,EAAEF,QAAQ,CAAC,CAAD;AAFb,WAAP;AAIH,SANY,CAAb;AAQAV,QAAAA,IAAI,CAACa,IAAL,CAAU;AAAEV,UAAAA,IAAF;AAAQE,UAAAA,OAAR;AAAiBC,UAAAA,MAAjB;AAAyBC,UAAAA;AAAzB,SAAV;AACH;;AACDO,MAAAA,OAAO,CAACC,GAAR,CAAYf,IAAZ;AACH,KAnBD;AAoBH;;AACDgB,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,GAAG,EAAE,KAAKhC,SAA7B;AAAwC,MAAA,IAAI,EAAC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EAKI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKF,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,CADJ;AASH;;AAzCmC;;AA2CxC,eAAeJ,SAAf","sourcesContent":["import React from 'react'\nimport { Button } from 'antd'\n\nclass FileInput extends React.Component {\n    constructor(props) {\n        super(props)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.fileInput = React.createRef()\n    }\n    handleSubmit(event) {\n        event.preventDefault()\n        let reader = new FileReader()\n        reader.readAsText(this.fileInput.current.files[0])\n        reader.onload = (e) => {\n            let result = e.target.result\n            result = result.split('\\n').filter(el => el !== '')\n            let data = []\n            for (let i = 0; i < result.length; i += 4) {\n                let name = result[i].slice(7)\n                let release = result[i + 1].slice(14)\n                let format = result[i + 2].slice(8)\n                let actors = result[i + 3].slice(7).split(',').map(el => el.trim()).map(el => {\n                    let elements = el.split(' ')\n                    return {\n                        f_name: elements[0],\n                        l_name: elements[1]\n                    }\n                })\n\n                data.push({ name, release, format, actors })\n            }\n            console.log(data)\n        }\n    }\n    render() {\n        return (\n            <div className='import-form'>\n                <label>\n                    Select File PLS!\n                    <input type=\"file\" ref={this.fileInput} name=\"file\" />\n                </label>\n                <Button onClick={this.handleSubmit}>Submit</Button>\n            </div>\n        )\n    }\n}\nexport default FileInput"]},"metadata":{},"sourceType":"module"}