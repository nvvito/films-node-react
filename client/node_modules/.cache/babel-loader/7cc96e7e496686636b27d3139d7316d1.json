{"ast":null,"code":"var _jsxFileName = \"/home/vito/films/client/src/pages/404.js\";\nimport React from 'react';\nimport { Result, Button, Icon } from 'antd';\nimport { Link } from \"react-router-dom\";\n\nconst Page404 = () => React.createElement(React.Fragment, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, React.createElement(FileInput, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}), React.createElement(Result, {\n  status: \"404\",\n  title: \"404\",\n  subTitle: \"Sorry, the page you visited does not exist.\",\n  extra: React.createElement(Button, {\n    type: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    type: \"video-camera\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), \" Films\")),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}));\n\nexport default Page404;\n\nclass FileInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fileInput = React.createRef();\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let data = new FormData();\n    data.append('file', this.fileInput.current.files[0]);\n    fetch('/api/film/import', {\n      method: 'post',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: data\n    }).then(res => res.json()).then(data => {\n      if (data.status) setTimeout(() => {\n        dispatch({\n          type: 'SUCCESS_LOAD_FILM',\n          payload: data.message\n        });\n        history.push(\"/\".concat(data.message._id));\n        message.success('Success Create!');\n      }, 500);else {\n        console.log(data);\n        message.error('Create Film Error!');\n        dispatch({\n          type: 'FAILED_CREATE'\n        });\n      }\n    }).catch(err => {\n      console.log(data);\n      message.error('Create Film Error!');\n      dispatch({\n        type: 'FAILED_CREATE'\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Upload file:\", React.createElement(\"input\", {\n      type: \"file\",\n      ref: this.fileInput,\n      name: \"file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}","map":{"version":3,"sources":["/home/vito/films/client/src/pages/404.js"],"names":["React","Result","Button","Icon","Link","Page404","FileInput","Component","constructor","props","handleSubmit","bind","fileInput","createRef","event","preventDefault","data","FormData","append","current","files","fetch","method","headers","body","then","res","json","status","setTimeout","dispatch","type","payload","message","history","push","_id","success","console","log","error","catch","err","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Result, Button, Icon } from 'antd'\nimport { Link } from \"react-router-dom\"\n\nconst Page404 = () =>\n    <React.Fragment>\n        <FileInput />\n        <Result\n            status=\"404\"\n            title=\"404\"\n            subTitle=\"Sorry, the page you visited does not exist.\"\n            extra={<Button type=\"primary\"><Link to='/'><Icon type=\"video-camera\" /> Films</Link></Button>}\n        />\n    </React.Fragment>\n\nexport default Page404\n\nclass FileInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.fileInput = React.createRef();\n    }\n    handleSubmit(event) {\n        event.preventDefault()\n        let data = new FormData()\n        data.append('file', this.fileInput.current.files[0])\n        fetch('/api/film/import', {\n            method: 'post',\n            headers: {\n                'content-type': 'application/json',\n            },\n            body: data\n        })\n            .then(res => res.json())\n            .then(data => {\n                if (data.status) setTimeout(() => {\n                    dispatch({\n                        type: 'SUCCESS_LOAD_FILM',\n                        payload: data.message\n                    })\n                    history.push(`/${data.message._id}`)\n                    message.success('Success Create!')\n                }, 500)\n                else {\n                    console.log(data)\n                    message.error('Create Film Error!')\n                    dispatch({ type: 'FAILED_CREATE' })\n                }\n            })\n            .catch(err => {\n                console.log(data)\n                message.error('Create Film Error!')\n                dispatch({ type: 'FAILED_CREATE' })\n            })\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <label>\n                    Upload file:\n            <input type=\"file\" ref={this.fileInput} name=\"file\" />\n                </label>\n                <br />\n                <button type=\"submit\">Submit</button>\n            </form>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}