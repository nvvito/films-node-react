{"ast":null,"code":"var _jsxFileName = \"/home/vito/Desktop/films/client/src/components/tagGroup.js\";\nimport React from 'react';\nimport { Tag, Input, Tooltip, Icon, message } from 'antd';\n\nclass EditableTagGroup extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tags: ['Unremovable', 'Tag 2', 'Tag 3'],\n      inputVisible: false,\n      inputValue: ''\n    };\n\n    this.handleClose = removedTag => {\n      const tags = this.state.tags.filter(tag => tag !== removedTag);\n      this.setState({\n        tags\n      });\n    };\n\n    this.showInput = () => {\n      this.setState({\n        inputVisible: true\n      }, () => this.input.focus());\n    };\n\n    this.handleInputChange = e => {\n      this.setState({\n        inputValue: e.target.value\n      });\n    };\n\n    this.handleInputConfirm = () => {\n      const inputValue = this.state.inputValue;\n      let tags = this.state.tags;\n      let tag = inputValue.split(' ').filter(el => el !== '');\n\n      if (tag.length === 2) {\n        if (inputValue && tags.indexOf(inputValue) === -1) {\n          tags = [...tags, inputValue];\n        }\n\n        console.log(tags);\n        this.setState({\n          tags,\n          inputVisible: false,\n          inputValue: ''\n        });\n      } else {\n        message.error('Name and surname must be entered!');\n        this.setState({\n          inputVisible: false,\n          inputValue: ''\n        });\n      }\n    };\n\n    this.saveInputRef = input => this.input = input;\n  }\n\n  render() {\n    const _this$state = this.state,\n          tags = _this$state.tags,\n          inputVisible = _this$state.inputVisible,\n          inputValue = _this$state.inputValue;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, tags.map((tag, index) => {\n      const isLongTag = tag.length > 20;\n      const tagElem = React.createElement(Tag, {\n        key: tag,\n        closable: index !== 0,\n        onClose: () => this.handleClose(tag),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, isLongTag ? \"\".concat(tag.slice(0, 20), \"...\") : tag);\n      return isLongTag ? React.createElement(Tooltip, {\n        title: tag,\n        key: tag,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, tagElem) : tagElem;\n    }), inputVisible && React.createElement(Input, {\n      ref: this.saveInputRef,\n      type: \"text\",\n      size: \"small\",\n      style: {\n        width: 78\n      },\n      value: inputValue,\n      onChange: this.handleInputChange,\n      onBlur: this.handleInputConfirm,\n      onPressEnter: this.handleInputConfirm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), !inputVisible && React.createElement(Tag, {\n      onClick: this.showInput,\n      style: {\n        background: '#fff',\n        borderStyle: 'dashed'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), \" New Tag\"));\n  }\n\n}\n\nexport default EditableTagGroup;","map":{"version":3,"sources":["/home/vito/Desktop/films/client/src/components/tagGroup.js"],"names":["React","Tag","Input","Tooltip","Icon","message","EditableTagGroup","Component","state","tags","inputVisible","inputValue","handleClose","removedTag","filter","tag","setState","showInput","input","focus","handleInputChange","e","target","value","handleInputConfirm","split","el","length","indexOf","console","log","error","saveInputRef","render","map","index","isLongTag","tagElem","slice","width","background","borderStyle"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Tag, Input, Tooltip, Icon, message } from 'antd'\n\nclass EditableTagGroup extends React.Component {\n    state = {\n        tags: ['Unremovable', 'Tag 2', 'Tag 3'],\n        inputVisible: false,\n        inputValue: '',\n    }\n\n    handleClose = removedTag => {\n        const tags = this.state.tags.filter(tag => tag !== removedTag)\n        this.setState({ tags })\n    }\n\n    showInput = () => {\n        this.setState({ inputVisible: true }, () => this.input.focus());\n    }\n\n    handleInputChange = e => {\n        this.setState({ inputValue: e.target.value })\n    }\n\n    handleInputConfirm = () => {\n        const { inputValue } = this.state\n        let { tags } = this.state\n        let tag = inputValue.split(' ').filter(el=>el!=='')\n        if(tag.length===2){\n            if (inputValue && tags.indexOf(inputValue) === -1) {\n                tags = [...tags, inputValue];\n            }\n            console.log(tags)\n            this.setState({\n                tags,\n                inputVisible: false,\n                inputValue: '',\n            })\n        }else {\n            message.error('Name and surname must be entered!')\n            this.setState({\n                inputVisible: false,\n                inputValue: '',\n            })\n        }\n    }\n\n    saveInputRef = input => (this.input = input);\n\n    render() {\n        const { tags, inputVisible, inputValue } = this.state;\n        return (\n            <div>\n                {tags.map((tag, index) => {\n                    const isLongTag = tag.length > 20;\n                    const tagElem = (\n                        <Tag key={tag} closable={index !== 0} onClose={() => this.handleClose(tag)}>\n                            {isLongTag ? `${tag.slice(0, 20)}...` : tag}\n                        </Tag>\n                    );\n                    return isLongTag ? (\n                        <Tooltip title={tag} key={tag}>\n                            {tagElem}\n                        </Tooltip>\n                    ) : (\n                            tagElem\n                        )\n                })}\n                {inputVisible && (\n                    <Input\n                        ref={this.saveInputRef}\n                        type=\"text\"\n                        size=\"small\"\n                        style={{ width: 78 }}\n                        value={inputValue}\n                        onChange={this.handleInputChange}\n                        onBlur={this.handleInputConfirm}\n                        onPressEnter={this.handleInputConfirm}\n                    />\n                )}\n                {!inputVisible && (\n                    <Tag onClick={this.showInput} style={{ background: '#fff', borderStyle: 'dashed' }}>\n                        <Icon type=\"plus\" /> New Tag\n          </Tag>\n                )}\n            </div>\n        )\n    }\n}\nexport default EditableTagGroup"]},"metadata":{},"sourceType":"module"}