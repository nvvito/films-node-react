{"ast":null,"code":"var _jsxFileName = \"/home/vito/films/client/src/pages/films.js\";\nimport React from 'react';\nimport { List, Skeleton, Button } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux'; //action\n\nimport { fetchFilms } from '../store/action'; //component\n\nimport ListPagination from '../components/pagination';\nimport ListSort from '../components/sort';\n\nclass Films extends React.Component {\n  componentDidMount() {\n    this.props.fetchFilms(1, 'name', 'asc');\n  }\n\n  render() {\n    let _this$props = this.props,\n        count = _this$props.count,\n        load = _this$props.load,\n        list = _this$props.list;\n    return React.createElement(\"div\", {\n      className: \"list-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, !load ? React.createElement(FilmsList, {\n      list: list,\n      count: count,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }) : React.createElement(LoadData, {\n      size: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  count: state.films.count,\n  page: state.films.page,\n  sort_field: state.films.sort_field,\n  sort_direction: state.films.sort_direction,\n  load: state.films.load,\n  list: state.films.list\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchFilms: bindActionCreators(fetchFilms, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Films); //helper\n//skeleton\n\nconst LoadData = ({\n  size\n}) => {\n  let list = [];\n\n  for (let i = 0; i < size; i++) list.push(React.createElement(Skeleton, {\n    title: false,\n    loading: true,\n    active: true,\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }));\n\n  return list;\n}; //List\n\n\nconst FilmsList = ({\n  list,\n  count\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}, React.createElement(Link, {\n  key: \"list-loadmore-more\",\n  to: \"/add\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n}, React.createElement(Button, {\n  type: \"primary\",\n  shape: \"circle\",\n  icon: \"file-add\",\n  size: \"large\",\n  className: \"add-user-btn\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n})), count ? React.createElement(ListSort, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62\n  },\n  __self: this\n}) : \"\", React.createElement(List, {\n  className: \"demo-loadmore-list\",\n  itemLayout: \"horizontal\",\n  dataSource: list,\n  renderItem: item => React.createElement(ListElement, {\n    data: item,\n    key: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66\n  },\n  __self: this\n}), count > 5 ? React.createElement(ListPagination, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75\n  },\n  __self: this\n}) : ''); //ListElement\n\n\nconst ListElement = ({\n  data\n}) => {\n  let actors = '';\n  data.actors.map((el, i, arr) => {\n    actors += \"\".concat(el.f_name, \" \").concat(el.l_name);\n    if (i + 1 !== arr.length) actors += ', ';\n    return el;\n  });\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(List.Item, {\n    actions: [React.createElement(Link, {\n      key: \"list-loadmore-more\",\n      to: \"/\".concat(data._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"more\")],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(List.Item.Meta, {\n    title: 'Name: ' + data.name,\n    description: \"Release: \".concat(moment(data.release).format(\"YYYY-MM-DD\"), \" / Format: \").concat(data.format),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), \"Actors: \".concat(actors)));\n};","map":{"version":3,"sources":["/home/vito/films/client/src/pages/films.js"],"names":["React","List","Skeleton","Button","Link","moment","connect","bindActionCreators","fetchFilms","ListPagination","ListSort","Films","Component","componentDidMount","props","render","count","load","list","mapStateToProps","state","films","page","sort_field","sort_direction","mapDispatchToProps","dispatch","LoadData","size","i","push","FilmsList","item","id","ListElement","data","actors","map","el","arr","f_name","l_name","length","_id","name","release","format"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { List, Skeleton, Button } from 'antd'\nimport { Link } from \"react-router-dom\"\nimport moment from 'moment'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n//action\nimport { fetchFilms } from '../store/action'\n//component\nimport ListPagination from '../components/pagination'\nimport ListSort from '../components/sort'\n\n\nclass Films extends React.Component {\n    componentDidMount() {\n        this.props.fetchFilms(1, 'name', 'asc')\n    }\n    render() {\n        let { count, load, list } = this.props\n        return (\n            <div className='list-body'>\n                {\n                    !load\n                        ?\n                        <FilmsList list={list} count={count} />\n                        :\n                        <LoadData size={5} />\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    count: state.films.count,\n    page: state.films.page,\n    sort_field: state.films.sort_field,\n    sort_direction: state.films.sort_direction,\n    load: state.films.load,\n    list: state.films.list,\n})\nconst mapDispatchToProps = dispatch => ({\n    fetchFilms: bindActionCreators(fetchFilms, dispatch),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Films)\n\n//helper\n//skeleton\nconst LoadData = ({ size }) => {\n    let list = []\n    for (let i = 0; i < size; i++) list.push(<Skeleton title={false} loading={true} active key={i}></Skeleton>)\n    return list\n}\n//List\nconst FilmsList = ({ list, count }) =>\n    <div>\n        <Link key=\"list-loadmore-more\" to={`/add`}><Button type=\"primary\" shape=\"circle\" icon=\"file-add\" size='large' className='add-user-btn' /></Link>\n        {\n            count\n                ?\n                <ListSort />\n                :\n                \"\"\n        }\n        <List\n            className=\"demo-loadmore-list\"\n            itemLayout=\"horizontal\"\n            dataSource={list}\n            renderItem={item => <ListElement data={item} key={item.id} />}\n        />\n        {\n            count > 5\n                ?\n                <ListPagination />\n                : ''\n        }\n    </div>\n//ListElement\nconst ListElement = ({ data }) => {\n    let actors = ''\n    data.actors.map((el, i, arr) => {\n        actors += `${el.f_name} ${el.l_name}`\n        if (i + 1 !== arr.length) actors += ', '\n        return el\n    })\n    return (\n        <React.Fragment>\n            <List.Item\n                actions={[<Link key=\"list-loadmore-more\" to={`/${data._id}`}>more</Link>]}\n            >\n                <List.Item.Meta\n                    title={'Name: ' + data.name}\n                    description={`Release: ${moment(data.release).format(\"YYYY-MM-DD\")} / Format: ${data.format}`}\n\n                />\n                {`Actors: ${actors}`}\n            </List.Item>\n        </React.Fragment>\n    )\n}"]},"metadata":{},"sourceType":"module"}