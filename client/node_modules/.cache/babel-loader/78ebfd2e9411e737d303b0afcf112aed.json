{"ast":null,"code":"var _jsxFileName = \"/home/vito/Desktop/films/client/src/components/search.js\";\nimport React from 'react';\nimport { Icon, AutoComplete, Input, message } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux'; //action\n\nimport { openFilm, getItemsAsync } from '../store/action';\nconst Option = AutoComplete.Option;\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getItemsAsync = searchValue => {\n      if (searchValue) {\n        this.props.getItemsAsync(searchValue);\n      } else this.props.openFilm();\n    };\n\n    this.renderResult = data => {\n      return data.map(el => React.createElement(Option, {\n        key: el._id,\n        value: el._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"search-item\",\n        to: \"/\".concat(el._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-item-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Name: \"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, el.name)), React.createElement(\"div\", {\n        className: \"search-item-age\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Release: \"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, el.release)))));\n    };\n\n    this.getItemsAsync = this.getItemsAsync.bind(this);\n    this.renderResult = this.renderResult.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(AutoComplete, {\n      dropdownMatchSelectWidth: false,\n      dropdownStyle: {\n        width: 100\n      },\n      placeholder: \"Search...\",\n      optionLabelProp: \"value\",\n      onSearch: this.getItemsAsync,\n      dataSource: this.props.result,\n      onSelect: this.props.openFilm,\n      value: this.props.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Input, {\n      suffix: React.createElement(Icon, {\n        type: \"search\",\n        className: \"certain-category-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  value: state.search.value,\n  result: state.search.result\n});\n\nconst mapDispatchToProps = dispatch => ({\n  openFilm: bindActionCreators(openFilm, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","map":{"version":3,"sources":["/home/vito/Desktop/films/client/src/components/search.js"],"names":["React","Icon","AutoComplete","Input","message","Link","connect","bindActionCreators","openFilm","getItemsAsync","Option","Search","Component","constructor","props","searchValue","renderResult","data","map","el","_id","name","release","bind","render","width","result","value","mapStateToProps","state","search","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Icon, AutoComplete, Input, message } from 'antd'\nimport { Link } from \"react-router-dom\"\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n//action\nimport { openFilm, getItemsAsync } from '../store/action'\n\nconst { Option } = AutoComplete\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props)\n        this.getItemsAsync = this.getItemsAsync.bind(this)\n        this.renderResult = this.renderResult.bind(this)\n    }\n    getItemsAsync = searchValue => {\n        if (searchValue) {\n            this.props.getItemsAsync(searchValue)\n        } else this.props.openFilm()\n    }\n    renderResult = data => {\n        return (\n            data.map(el =>\n                <Option key={el._id} value={el._id}>\n                    <Link className=\"search-item\" to={`/${el._id}`}>\n                        <div className=\"search-item-name\">\n                            <span>{`Name: `}</span>\n                            <span>{el.name}</span>\n                        </div>\n                        <div className=\"search-item-age\">\n                            <span>{`Release: `}</span>\n                            <span>{el.release}</span>\n                        </div>\n                    </Link>\n                </Option>\n            )\n        )\n    }\n    render() {\n        return (\n            <div>\n                <AutoComplete\n                    dropdownMatchSelectWidth={false}\n                    dropdownStyle={{ width: 100 }}\n                    placeholder=\"Search...\"\n                    optionLabelProp=\"value\"\n                    onSearch={this.getItemsAsync}\n                    dataSource={this.props.result}\n                    onSelect={this.props.openFilm}\n                    value={this.props.value}\n                >\n                    <Input suffix={<Icon type=\"search\" className=\"certain-category-icon\" />} />\n                </AutoComplete>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    value: state.search.value,\n    result: state.search.result\n})\nconst mapDispatchToProps = dispatch => ({\n    openFilm: bindActionCreators(openFilm, dispatch),\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(Search)"]},"metadata":{},"sourceType":"module"}