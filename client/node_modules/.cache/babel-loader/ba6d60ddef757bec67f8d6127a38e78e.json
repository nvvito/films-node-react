{"ast":null,"code":"var _jsxFileName = \"/home/vito/films/client/src/pages/import.js\";\nimport React from 'react';\nimport { Button } from 'antd';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux'; //action\n\nimport { importData, importReset } from '../store/action';\n\nclass FileInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fileInput = React.createRef();\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let reader = new FileReader();\n    reader.readAsText(this.fileInput.current.files[0]);\n\n    reader.onload = e => {\n      let result = e.target.result;\n      result = result.split('\\n').filter(el => el !== '');\n      let data = [];\n\n      for (let i = 0; i < result.length; i += 4) {\n        let name = result[i].slice(7);\n        let release = result[i + 1].slice(14);\n        let format = result[i + 2].slice(8);\n        let actors = result[i + 3].slice(7).split(',').map(el => el.trim()).map(el => {\n          let elements = el.split(' ');\n          return {\n            f_name: elements[0],\n            l_name: elements[1]\n          };\n        });\n        data.push({\n          name,\n          release,\n          format,\n          actors\n        });\n      }\n\n      console.log(data);\n    };\n  }\n\n  render() {\n    return this.props.load ? 'asd' : result ? React.createElement(Result, {\n      status: \"success\",\n      title: \"Import Data Success!\",\n      subTitle: \"You can import the data again!\",\n      extra: React.createElement(Button, {\n        type: \"primary\",\n        onClick: this.props.importReset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Import Again\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: \"import-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Select File PLS!\", React.createElement(\"input\", {\n      type: \"file\",\n      ref: this.fileInput,\n      name: \"file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Import\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  load: state.import.load,\n  result: state.import.result\n});\n\nconst mapDispatchToProps = dispatch => ({\n  importData: bindActionCreators(importData, dispatch),\n  importReset: bindActionCreators(importReset, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FileInput);","map":{"version":3,"sources":["/home/vito/films/client/src/pages/import.js"],"names":["React","Button","connect","bindActionCreators","importData","importReset","FileInput","Component","constructor","props","handleSubmit","bind","fileInput","createRef","event","preventDefault","reader","FileReader","readAsText","current","files","onload","e","result","target","split","filter","el","data","i","length","name","slice","release","format","actors","map","trim","elements","f_name","l_name","push","console","log","render","load","mapStateToProps","state","import","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Button } from 'antd'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n//action\nimport { importData, importReset } from '../store/action'\n\nclass FileInput extends React.Component {\n    constructor(props) {\n        super(props)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.fileInput = React.createRef()\n    }\n    handleSubmit(event) {\n        event.preventDefault()\n        let reader = new FileReader()\n        reader.readAsText(this.fileInput.current.files[0])\n        reader.onload = (e) => {\n            let result = e.target.result\n            result = result.split('\\n').filter(el => el !== '')\n            let data = []\n            for (let i = 0; i < result.length; i += 4) {\n                let name = result[i].slice(7)\n                let release = result[i + 1].slice(14)\n                let format = result[i + 2].slice(8)\n                let actors = result[i + 3].slice(7).split(',').map(el => el.trim()).map(el => {\n                    let elements = el.split(' ')\n                    return {\n                        f_name: elements[0],\n                        l_name: elements[1]\n                    }\n                })\n\n                data.push({ name, release, format, actors })\n            }\n            console.log(data)\n        }\n    }\n    render() {\n        return (\n            this.props.load\n                ?\n                'asd'\n                : result\n                    ?\n                    <Result\n                        status=\"success\"\n                        title=\"Import Data Success!\"\n                        subTitle=\"You can import the data again!\"\n                        extra={<Button type=\"primary\" onClick={this.props.importReset}>Import Again</Button>}\n                    />\n                    :\n                    <div className='import-form'>\n                        <label>\n                            Select File PLS!\n                    <input type=\"file\" ref={this.fileInput} name=\"file\" />\n                        </label>\n                        <Button onClick={this.handleSubmit}>Import</Button>\n                    </div>\n        )\n    }\n}\nconst mapStateToProps = state => ({\n    load: state.import.load,\n    result: state.import.result\n})\nconst mapDispatchToProps = dispatch => ({\n    importData: bindActionCreators(importData, dispatch),\n    importReset: bindActionCreators(importReset, dispatch),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FileInput)"]},"metadata":{},"sourceType":"module"}