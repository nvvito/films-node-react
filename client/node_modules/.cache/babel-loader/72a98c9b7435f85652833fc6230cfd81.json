{"ast":null,"code":"var _jsxFileName = \"/home/vito/films/client/src/pages/404.js\";\nimport React from 'react';\nimport { Result, Button, Icon } from 'antd';\nimport { Link } from \"react-router-dom\";\n\nconst Page404 = () => React.createElement(React.Fragment, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, React.createElement(FileInput, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}), React.createElement(Result, {\n  status: \"404\",\n  title: \"404\",\n  subTitle: \"Sorry, the page you visited does not exist.\",\n  extra: React.createElement(Button, {\n    type: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    type: \"video-camera\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), \" Films\")),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}));\n\nexport default Page404;\n\nclass FileInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fileInput = React.createRef();\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let reader = new FileReader();\n    reader.readAsText(this.fileInput.current.files[0]);\n\n    reader.onload = e => {\n      let result = e.target.result;\n      result = result.split('\\n').filter(el => el != '');\n      let data = [];\n\n      for (let i = 0; i < result.length; i += 4) {\n        let el = {\n          name: result[i].slice(7),\n          release: result[i + 1].slice(14),\n          format: result[i + 2].slice(8),\n          actors: result[i + 3].slice(7).split(',').map(el => el.trim())\n        };\n        console.log(el);\n      } //console.log(result)\n\n    };\n    /*let data = new FormData()\n    data.append('file', this.fileInput.current.files[0])\n    fetch('/api/film/import', {\n        method: 'post',\n        headers: {\n            'content-type': 'application/json',\n        },\n        body: data\n    })\n        .then(res => res.json())\n        .then(data => {\n            console.log(data)\n        })\n        .catch(err => {\n            console.log(err)\n            //message.error('Create Film Error!')\n        })*/\n\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Upload file:\", React.createElement(\"input\", {\n      type: \"file\",\n      ref: this.fileInput,\n      name: \"file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}","map":{"version":3,"sources":["/home/vito/films/client/src/pages/404.js"],"names":["React","Result","Button","Icon","Link","Page404","FileInput","Component","constructor","props","handleSubmit","bind","fileInput","createRef","event","preventDefault","reader","FileReader","readAsText","current","files","onload","e","result","target","split","filter","el","data","i","length","name","slice","release","format","actors","map","trim","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Result, Button, Icon } from 'antd'\nimport { Link } from \"react-router-dom\"\n\nconst Page404 = () =>\n    <React.Fragment>\n        <FileInput />\n        <Result\n            status=\"404\"\n            title=\"404\"\n            subTitle=\"Sorry, the page you visited does not exist.\"\n            extra={<Button type=\"primary\"><Link to='/'><Icon type=\"video-camera\" /> Films</Link></Button>}\n        />\n    </React.Fragment>\n\nexport default Page404\n\nclass FileInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.fileInput = React.createRef();\n    }\n    handleSubmit(event) {\n        event.preventDefault()\n        let reader = new FileReader()\n        reader.readAsText(this.fileInput.current.files[0])\n        reader.onload = (e) => {\n            let result = e.target.result\n            result = result.split('\\n').filter(el => el != '')\n            let data = []\n            for (let i = 0; i < result.length; i += 4) {\n                let el = {\n                    name: result[i].slice(7),\n                    release: result[i+1].slice(14),\n                    format: result[i+2].slice(8),\n                    actors: result[i+3].slice(7).split(',').map(el=>el.trim())\n                }\n                console.log(el)\n            }\n            //console.log(result)\n        }\n\n        /*let data = new FormData()\n        data.append('file', this.fileInput.current.files[0])\n        fetch('/api/film/import', {\n            method: 'post',\n            headers: {\n                'content-type': 'application/json',\n            },\n            body: data\n        })\n            .then(res => res.json())\n            .then(data => {\n                console.log(data)\n            })\n            .catch(err => {\n                console.log(err)\n                //message.error('Create Film Error!')\n            })*/\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <label>\n                    Upload file:\n            <input type=\"file\" ref={this.fileInput} name=\"file\" />\n                </label>\n                <br />\n                <button type=\"submit\">Submit</button>\n            </form>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}