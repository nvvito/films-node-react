{"ast":null,"code":"var _jsxFileName = \"/home/vito/Desktop/films/client/src/pages/login.js\";\nimport React from 'react';\nimport { Form, Icon, Input, Button, Card, Result } from 'antd';\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux'; //action\n\nimport { login, logout } from '../store/action';\n\nclass NormalLoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          this.props.login(values);\n        }\n      });\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const _this$props = this.props,\n          auth = _this$props.auth,\n          load = _this$props.load,\n          logout = _this$props.logout,\n          location = _this$props.location;\n\n    if (location.state) {\n      if (location.state.from && auth === true) return React.createElement(Redirect, {\n        to: location.state.from,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      });\n    }\n\n    return !auth ? React.createElement(Card, {\n      className: \"form-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, getFieldDecorator('username', {\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }),\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: 'Please input your Password!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      loading: load,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Log in\")))) : React.createElement(Result, {\n      status: \"success\",\n      title: \"You are successfully logged in!\",\n      extra: [React.createElement(Button, {\n        key: \"tasks\",\n        type: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/tasks\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"smile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), \" Tasks\")), React.createElement(Button, {\n        key: \"logout\",\n        onClick: logout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"logout\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), \"Logout\")],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst WrappedNormalLoginForm = Form.create({\n  name: 'normal_login'\n})(NormalLoginForm);\n\nconst mapStateToProps = state => ({\n  auth: state.auth.status,\n  load: state.auth.load\n});\n\nconst mapDispatchToProps = dispatch => ({\n  login: bindActionCreators(login, dispatch),\n  logout: bindActionCreators(logout, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedNormalLoginForm);","map":{"version":3,"sources":["/home/vito/Desktop/films/client/src/pages/login.js"],"names":["React","Form","Icon","Input","Button","Card","Result","Link","Redirect","connect","bindActionCreators","login","logout","NormalLoginForm","Component","handleSubmit","e","preventDefault","props","form","validateFields","err","values","render","getFieldDecorator","auth","load","location","state","from","rules","required","message","color","WrappedNormalLoginForm","create","name","mapStateToProps","status","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Form, Icon, Input, Button, Card, Result } from 'antd'\nimport { Link, Redirect } from \"react-router-dom\"\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n//action\nimport { login, logout } from '../store/action'\n\nclass NormalLoginForm extends React.Component {\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                this.props.login(values)\n            }\n        })\n    }\n    render() {\n        const { getFieldDecorator } = this.props.form\n        const { auth, load, logout, location } = this.props\n\n        if (location.state) {\n            if (location.state.from && auth === true) return <Redirect to={location.state.from} />\n        }\n        return (\n            !auth\n                ?\n                <Card className='form-card'>\n                    <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                        <Form.Item>\n                            {getFieldDecorator('username', {\n                                rules: [{ required: true, message: 'Please input your username!' }],\n                            })(\n                                <Input\n                                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                    placeholder=\"Username\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item>\n                            {getFieldDecorator('password', {\n                                rules: [{ required: true, message: 'Please input your Password!' }],\n                            })(\n                                <Input\n                                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                    type=\"password\"\n                                    placeholder=\"Password\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" loading={load}>\n                                Log in\n                        </Button>\n                        </Form.Item>\n                    </Form>\n                </Card>\n                :\n                <Result\n                    status=\"success\"\n                    title=\"You are successfully logged in!\"\n                    extra={[\n                        <Button key='tasks' type=\"primary\"><Link to=\"/tasks\"><Icon type=\"smile\" /> Tasks</Link></Button>,\n                        <Button key='logout' onClick={logout}><Icon type=\"logout\" />Logout</Button>,\n                    ]}\n                />\n        )\n    }\n}\n\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(NormalLoginForm)\n\nconst mapStateToProps = state => ({\n    auth: state.auth.status,\n    load: state.auth.load\n})\nconst mapDispatchToProps = dispatch => ({\n    login: bindActionCreators(login, dispatch),\n    logout: bindActionCreators(logout, dispatch)\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedNormalLoginForm)"]},"metadata":{},"sourceType":"module"}