{"ast":null,"code":"var _jsxFileName = \"/home/vito/Desktop/films/client/src/components/modalFormUpdate.js\";\nimport React from 'react';\nimport { Modal, Form, Input, Switch } from 'antd';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux'; //action\n\nimport { closeUpdate } from '../store/action';\n\nclass ModalForm extends React.Component {\n  render() {\n    let _this$props = this.props,\n        modal = _this$props.modal,\n        closeUpdate = _this$props.closeUpdate,\n        form = _this$props.form,\n        handleUpdate = _this$props.handleUpdate,\n        text = _this$props.text,\n        status = _this$props.status,\n        id = _this$props.id;\n    const getFieldDecorator = form.getFieldDecorator;\n    return React.createElement(Modal, {\n      visible: modal,\n      title: \"Update Task\",\n      okText: \"Update\",\n      onCancel: closeUpdate,\n      onOk: () => handleUpdate(form, id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(Form, {\n      layout: \"vertical\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, getFieldDecorator('text', {\n      rules: [{\n        required: true,\n        message: 'Please input the Text!'\n      }],\n      initialValue: text\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, getFieldDecorator('status', {\n      valuePropName: 'checked',\n      initialValue: status ? true : false\n    })(React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst _ModalForm = Form.create({\n  name: 'form_in_modal_update'\n})(ModalForm);\n\nconst mapStateToProps = state => ({\n  modal: state.modal.update.visible,\n  text: state.modal.update.text,\n  status: state.modal.update.status,\n  id: state.modal.update.id\n});\n\nconst mapDispatchToProps = dispatch => ({\n  closeUpdate: bindActionCreators(closeUpdate, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(_ModalForm);","map":{"version":3,"sources":["/home/vito/Desktop/films/client/src/components/modalFormUpdate.js"],"names":["React","Modal","Form","Input","Switch","connect","bindActionCreators","closeUpdate","ModalForm","Component","render","props","modal","form","handleUpdate","text","status","id","getFieldDecorator","rules","required","message","initialValue","valuePropName","_ModalForm","create","name","mapStateToProps","state","update","visible","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,KAAtB,EAA6BC,MAA7B,QAA2C,MAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC,C,CACA;;AACA,SAASC,WAAT,QAA4B,iBAA5B;;AAEA,MAAMC,SAAN,SAAwBR,KAAK,CAACS,SAA9B,CAAwC;AACpCC,EAAAA,MAAM,GAAG;AAAA,sBAC8D,KAAKC,KADnE;AAAA,QACCC,KADD,eACCA,KADD;AAAA,QACQL,WADR,eACQA,WADR;AAAA,QACqBM,IADrB,eACqBA,IADrB;AAAA,QAC2BC,YAD3B,eAC2BA,YAD3B;AAAA,QACyCC,IADzC,eACyCA,IADzC;AAAA,QAC+CC,MAD/C,eAC+CA,MAD/C;AAAA,QACuDC,EADvD,eACuDA,EADvD;AAAA,UAEGC,iBAFH,GAEyBL,IAFzB,CAEGK,iBAFH;AAGL,WACI,oBAAC,KAAD;AACI,MAAA,OAAO,EAAEN,KADb;AAEI,MAAA,KAAK,EAAC,aAFV;AAGI,MAAA,MAAM,EAAC,QAHX;AAII,MAAA,QAAQ,EAAEL,WAJd;AAKI,MAAA,IAAI,EAAE,MAAMO,YAAY,CAACD,IAAD,EAAOI,EAAP,CAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOI,oBAAC,IAAD;AAAM,MAAA,MAAM,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,iBAAiB,CAAC,MAAD,EAAS;AACvBC,MAAAA,KAAK,EAAE,CAAC;AAAEC,QAAAA,QAAQ,EAAE,IAAZ;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAAD,CADgB;AAEvBC,MAAAA,YAAY,EAAEP;AAFS,KAAT,CAAjB,CAGE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADL,CADJ,EAOI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKG,iBAAiB,CAAC,QAAD,EAAW;AAAEK,MAAAA,aAAa,EAAE,SAAjB;AAA4BD,MAAAA,YAAY,EAAEN,MAAM,GAAG,IAAH,GAAU;AAA1D,KAAX,CAAjB,CAAgG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhG,CADL,CAPJ,CAPJ,CADJ;AAqBH;;AAzBmC;;AA4BxC,MAAMQ,UAAU,GAAGtB,IAAI,CAACuB,MAAL,CAAY;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAZ,EAA8ClB,SAA9C,CAAnB;;AAEA,MAAMmB,eAAe,GAAGC,KAAK,KAAK;AAC9BhB,EAAAA,KAAK,EAAEgB,KAAK,CAAChB,KAAN,CAAYiB,MAAZ,CAAmBC,OADI;AAE9Bf,EAAAA,IAAI,EAAEa,KAAK,CAAChB,KAAN,CAAYiB,MAAZ,CAAmBd,IAFK;AAG9BC,EAAAA,MAAM,EAAEY,KAAK,CAAChB,KAAN,CAAYiB,MAAZ,CAAmBb,MAHG;AAI9BC,EAAAA,EAAE,EAAEW,KAAK,CAAChB,KAAN,CAAYiB,MAAZ,CAAmBZ;AAJO,CAAL,CAA7B;;AAMA,MAAMc,kBAAkB,GAAGC,QAAQ,KAAK;AACpCzB,EAAAA,WAAW,EAAED,kBAAkB,CAACC,WAAD,EAAcyB,QAAd;AADK,CAAL,CAAnC;;AAIA,eAAe3B,OAAO,CAACsB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CP,UAA7C,CAAf","sourcesContent":["import React from 'react'\nimport { Modal, Form, Input, Switch } from 'antd'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n//action\nimport { closeUpdate } from '../store/action'\n\nclass ModalForm extends React.Component {\n    render() {\n        let { modal, closeUpdate, form, handleUpdate, text, status, id } = this.props\n        const { getFieldDecorator } = form\n        return (\n            <Modal\n                visible={modal}\n                title=\"Update Task\"\n                okText=\"Update\"\n                onCancel={closeUpdate}\n                onOk={() => handleUpdate(form, id)}\n            >\n                <Form layout=\"vertical\">\n                    <Form.Item label=\"Text\">\n                        {getFieldDecorator('text', {\n                            rules: [{ required: true, message: 'Please input the Text!' }],\n                            initialValue: text,\n                        })(<Input />)}\n                    </Form.Item>\n                    <Form.Item label=\"Status\">\n                        {getFieldDecorator('status', { valuePropName: 'checked', initialValue: status ? true : false  })(<Switch />)}\n                    </Form.Item>\n                </Form>\n            </Modal>\n        )\n    }\n}\n\nconst _ModalForm = Form.create({ name: 'form_in_modal_update' })(ModalForm)\n\nconst mapStateToProps = state => ({\n    modal: state.modal.update.visible,\n    text: state.modal.update.text,\n    status: state.modal.update.status,\n    id: state.modal.update.id,\n})\nconst mapDispatchToProps = dispatch => ({\n    closeUpdate: bindActionCreators(closeUpdate, dispatch),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(_ModalForm)"]},"metadata":{},"sourceType":"module"}