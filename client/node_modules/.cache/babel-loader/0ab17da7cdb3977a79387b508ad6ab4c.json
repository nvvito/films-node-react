{"ast":null,"code":"var _jsxFileName = \"/home/vito/Desktop/films/client/src/components/tagGroup.js\";\nimport React from 'react';\nimport { Tag, Input, Tooltip, Icon, message } from 'antd';\n\nclass EditableTagGroup extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      inputVisible: false,\n      inputValue: ''\n    };\n\n    this.handleClose = removedTag => {\n      const tags = this.state.tags.filter(tag => tag !== removedTag);\n      this.setState({\n        tags\n      });\n    };\n\n    this.showInput = () => {\n      this.setState({\n        inputVisible: true\n      }, () => this.input.focus());\n    };\n\n    this.handleInputChange = e => {\n      this.setState({\n        inputValue: e.target.value\n      });\n    };\n\n    this.handleInputConfirm = () => {\n      const inputValue = this.state.inputValue;\n      let tags = this.state.tags;\n      let tag = inputValue.split(' ').filter(el => el !== '');\n\n      if (tag.length === 2) {\n        if (inputValue && tags.indexOf(inputValue) === -1) {\n          tags = [...tags, inputValue];\n        }\n\n        console.log(tags);\n        this.setState({\n          tags,\n          inputVisible: false,\n          inputValue: ''\n        });\n      } else {\n        message.error('Name and surname must be entered!');\n        this.setState({\n          inputVisible: false,\n          inputValue: ''\n        });\n      }\n    };\n\n    this.saveInputRef = input => this.input = input;\n  }\n\n  render() {\n    const _this$state = this.state,\n          inputVisible = _this$state.inputVisible,\n          inputValue = _this$state.inputValue;\n    const actors = this.props.actors;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, tags.map(actor => {\n      let tag = actor.f_name + l_name;\n      const isLongTag = tag.length > 20;\n      const tagElem = React.createElement(Tag, {\n        key: tag,\n        closable: true,\n        onClose: () => this.handleClose(tag),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, isLongTag ? \"\".concat(tag.slice(0, 20), \"...\") : tag);\n      return isLongTag ? React.createElement(Tooltip, {\n        title: tag,\n        key: tag,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, tagElem) : tagElem;\n    }), inputVisible && React.createElement(Input, {\n      ref: this.saveInputRef,\n      type: \"text\",\n      size: \"small\",\n      style: {\n        width: 78\n      },\n      value: inputValue,\n      onChange: this.handleInputChange,\n      onBlur: this.handleInputConfirm,\n      onPressEnter: this.handleInputConfirm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), !inputVisible && React.createElement(Tag, {\n      onClick: this.showInput,\n      style: {\n        background: '#fff',\n        borderStyle: 'dashed'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), \" New Tag\"));\n  }\n\n}\n\nexport default EditableTagGroup;","map":{"version":3,"sources":["/home/vito/Desktop/films/client/src/components/tagGroup.js"],"names":["React","Tag","Input","Tooltip","Icon","message","EditableTagGroup","Component","state","inputVisible","inputValue","handleClose","removedTag","tags","filter","tag","setState","showInput","input","focus","handleInputChange","e","target","value","handleInputConfirm","split","el","length","indexOf","console","log","error","saveInputRef","render","actors","props","map","actor","f_name","l_name","isLongTag","tagElem","slice","width","background","borderStyle"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,KAAd,EAAqBC,OAArB,EAA8BC,IAA9B,EAAoCC,OAApC,QAAmD,MAAnD;;AAEA,MAAMC,gBAAN,SAA+BN,KAAK,CAACO,SAArC,CAA+C;AAAA;AAAA;AAAA,SAC3CC,KAD2C,GACnC;AACJC,MAAAA,YAAY,EAAE,KADV;AAEJC,MAAAA,UAAU,EAAE;AAFR,KADmC;;AAAA,SAM3CC,WAN2C,GAM7BC,UAAU,IAAI;AACxB,YAAMC,IAAI,GAAG,KAAKL,KAAL,CAAWK,IAAX,CAAgBC,MAAhB,CAAuBC,GAAG,IAAIA,GAAG,KAAKH,UAAtC,CAAb;AACA,WAAKI,QAAL,CAAc;AAAEH,QAAAA;AAAF,OAAd;AACH,KAT0C;;AAAA,SAW3CI,SAX2C,GAW/B,MAAM;AACd,WAAKD,QAAL,CAAc;AAAEP,QAAAA,YAAY,EAAE;AAAhB,OAAd,EAAsC,MAAM,KAAKS,KAAL,CAAWC,KAAX,EAA5C;AACH,KAb0C;;AAAA,SAe3CC,iBAf2C,GAevBC,CAAC,IAAI;AACrB,WAAKL,QAAL,CAAc;AAAEN,QAAAA,UAAU,EAAEW,CAAC,CAACC,MAAF,CAASC;AAAvB,OAAd;AACH,KAjB0C;;AAAA,SAmB3CC,kBAnB2C,GAmBtB,MAAM;AAAA,YACfd,UADe,GACA,KAAKF,KADL,CACfE,UADe;AAAA,UAEjBG,IAFiB,GAER,KAAKL,KAFG,CAEjBK,IAFiB;AAGvB,UAAIE,GAAG,GAAGL,UAAU,CAACe,KAAX,CAAiB,GAAjB,EAAsBX,MAAtB,CAA6BY,EAAE,IAAIA,EAAE,KAAK,EAA1C,CAAV;;AACA,UAAIX,GAAG,CAACY,MAAJ,KAAe,CAAnB,EAAsB;AAClB,YAAIjB,UAAU,IAAIG,IAAI,CAACe,OAAL,CAAalB,UAAb,MAA6B,CAAC,CAAhD,EAAmD;AAC/CG,UAAAA,IAAI,GAAG,CAAC,GAAGA,IAAJ,EAAUH,UAAV,CAAP;AACH;;AACDmB,QAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAZ;AACA,aAAKG,QAAL,CAAc;AACVH,UAAAA,IADU;AAEVJ,UAAAA,YAAY,EAAE,KAFJ;AAGVC,UAAAA,UAAU,EAAE;AAHF,SAAd;AAKH,OAVD,MAUO;AACHL,QAAAA,OAAO,CAAC0B,KAAR,CAAc,mCAAd;AACA,aAAKf,QAAL,CAAc;AACVP,UAAAA,YAAY,EAAE,KADJ;AAEVC,UAAAA,UAAU,EAAE;AAFF,SAAd;AAIH;AACJ,KAxC0C;;AAAA,SA0C3CsB,YA1C2C,GA0C5Bd,KAAK,IAAK,KAAKA,KAAL,GAAaA,KA1CK;AAAA;;AA4C3Ce,EAAAA,MAAM,GAAG;AAAA,wBACgC,KAAKzB,KADrC;AAAA,UACGC,YADH,eACGA,YADH;AAAA,UACiBC,UADjB,eACiBA,UADjB;AAAA,UAEGwB,MAFH,GAEc,KAAKC,KAFnB,CAEGD,MAFH;AAGL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKrB,IAAI,CAACuB,GAAL,CAASC,KAAK,IAAI;AACf,UAAItB,GAAG,GAAGsB,KAAK,CAACC,MAAN,GAAaC,MAAvB;AACA,YAAMC,SAAS,GAAGzB,GAAG,CAACY,MAAJ,GAAa,EAA/B;AACA,YAAMc,OAAO,GACT,oBAAC,GAAD;AAAK,QAAA,GAAG,EAAE1B,GAAV;AAAe,QAAA,QAAQ,MAAvB;AAAwB,QAAA,OAAO,EAAE,MAAM,KAAKJ,WAAL,CAAiBI,GAAjB,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKyB,SAAS,aAAMzB,GAAG,CAAC2B,KAAJ,CAAU,CAAV,EAAa,EAAb,CAAN,WAA8B3B,GAD5C,CADJ;AAKA,aAAOyB,SAAS,GACZ,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAEzB,GAAhB;AAAqB,QAAA,GAAG,EAAEA,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK0B,OADL,CADY,GAKRA,OALR;AAOH,KAfA,CADL,EAiBKhC,YAAY,IACT,oBAAC,KAAD;AACI,MAAA,GAAG,EAAE,KAAKuB,YADd;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,KAAK,EAAE;AAAEW,QAAAA,KAAK,EAAE;AAAT,OAJX;AAKI,MAAA,KAAK,EAAEjC,UALX;AAMI,MAAA,QAAQ,EAAE,KAAKU,iBANnB;AAOI,MAAA,MAAM,EAAE,KAAKI,kBAPjB;AAQI,MAAA,YAAY,EAAE,KAAKA,kBARvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBR,EA6BK,CAACf,YAAD,IACG,oBAAC,GAAD;AAAK,MAAA,OAAO,EAAE,KAAKQ,SAAnB;AAA8B,MAAA,KAAK,EAAE;AAAE2B,QAAAA,UAAU,EAAE,MAAd;AAAsBC,QAAAA,WAAW,EAAE;AAAnC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,aA9BR,CADJ;AAqCH;;AApF0C;;AAsF/C,eAAevC,gBAAf","sourcesContent":["import React from 'react'\nimport { Tag, Input, Tooltip, Icon, message } from 'antd'\n\nclass EditableTagGroup extends React.Component {\n    state = {\n        inputVisible: false,\n        inputValue: '',\n    }\n\n    handleClose = removedTag => {\n        const tags = this.state.tags.filter(tag => tag !== removedTag)\n        this.setState({ tags })\n    }\n\n    showInput = () => {\n        this.setState({ inputVisible: true }, () => this.input.focus());\n    }\n\n    handleInputChange = e => {\n        this.setState({ inputValue: e.target.value })\n    }\n\n    handleInputConfirm = () => {\n        const { inputValue } = this.state\n        let { tags } = this.state\n        let tag = inputValue.split(' ').filter(el => el !== '')\n        if (tag.length === 2) {\n            if (inputValue && tags.indexOf(inputValue) === -1) {\n                tags = [...tags, inputValue];\n            }\n            console.log(tags)\n            this.setState({\n                tags,\n                inputVisible: false,\n                inputValue: '',\n            })\n        } else {\n            message.error('Name and surname must be entered!')\n            this.setState({\n                inputVisible: false,\n                inputValue: '',\n            })\n        }\n    }\n\n    saveInputRef = input => (this.input = input);\n\n    render() {\n        const { inputVisible, inputValue } = this.state\n        const { actors } = this.props\n        return (\n            <div>\n                {tags.map(actor => {\n                    let tag = actor.f_name+l_name\n                    const isLongTag = tag.length > 20\n                    const tagElem = (\n                        <Tag key={tag} closable onClose={() => this.handleClose(tag)}>\n                            {isLongTag ? `${tag.slice(0, 20)}...` : tag}\n                        </Tag>\n                    );\n                    return isLongTag ? (\n                        <Tooltip title={tag} key={tag}>\n                            {tagElem}\n                        </Tooltip>\n                    ) : (\n                            tagElem\n                        )\n                })}\n                {inputVisible && (\n                    <Input\n                        ref={this.saveInputRef}\n                        type=\"text\"\n                        size=\"small\"\n                        style={{ width: 78 }}\n                        value={inputValue}\n                        onChange={this.handleInputChange}\n                        onBlur={this.handleInputConfirm}\n                        onPressEnter={this.handleInputConfirm}\n                    />\n                )}\n                {!inputVisible && (\n                    <Tag onClick={this.showInput} style={{ background: '#fff', borderStyle: 'dashed' }}>\n                        <Icon type=\"plus\" /> New Tag\n          </Tag>\n                )}\n            </div>\n        )\n    }\n}\nexport default EditableTagGroup"]},"metadata":{},"sourceType":"module"}